var documenterSearchIndex = {"docs":
[{"location":"functions.html#Fourier-transform-of-basis-elements","page":"Functions","title":"Fourier transform of basis elements","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.Wintegrand\nLinearResponse.WBasisFT","category":"page"},{"location":"functions.html#LinearResponse.Wintegrand","page":"Functions","title":"LinearResponse.Wintegrand","text":"Wintegrand(w,a,e,L,Ω1,Ω2,ψ,dψ,d2ψ,basis,params)\n\nIntegrand computation/update for FT of basis elements\n\n\n\n\n\n","category":"function"},{"location":"functions.html#LinearResponse.WBasisFT","page":"Functions","title":"LinearResponse.WBasisFT","text":"WBasisFT(a,e,Ω1,Ω2,n1,n2,)\n\nFourier Transform of basis elements using RK4 scheme result stored in place\n\n\n\n\n\nwith basisFT struct\n\n\n\n\n\nwithout Ω1, Ω2\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Integral-over-the-resonance-line","page":"Functions","title":"Integral over the resonance line","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.MakeGu","category":"page"},{"location":"functions.html#LinearResponse.MakeGu","page":"Functions","title":"LinearResponse.MakeGu","text":"MakeGu(ndFdJ,n1,n2,Wdata,tabu[,params])\n\nfunction to compute G(u)\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Decomposition","page":"Functions","title":"Decomposition","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.RunAXi","category":"page"},{"location":"functions.html#LinearResponse.RunAXi","page":"Functions","title":"LinearResponse.RunAXi","text":"RunAXi(FHT,params)\n\nfunction to make the decomposition coefficients \"a\" of the response matrix M\n\nthese values do not depend on the frequency being evaluated: which makes them good to table\n\nis this struggling from having to pass around a gigantic array? what if we did more splitting?\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Response-matrix-computations","page":"Functions","title":"Response matrix computations","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.tabM!","category":"page"},{"location":"functions.html#LinearResponse.tabM!","page":"Functions","title":"LinearResponse.tabM!","text":"tabM!(ω,tabM,tabaMcoef,tabωminωmax,FHT,params)\n\ncomputes the response matrix M(ω) for a given COMPLEX frequency ω in physical units, i.e. not (yet) rescaled by 1/Ω0.\n\n@IMPROVE: The shape of the array could maybe be improved\n\nSee LinearTheory.jl for a similar version\n\n\n\n\n\n","category":"function"},{"location":"index.html#LinearResponse.jl","page":"Home","title":"LinearResponse.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Linear response of self-gravitating systems in Julia","category":"page"},{"location":"io.html#I/O","page":"IO","title":"I/O","text":"","category":"section"}]
}
