var documenterSearchIndex = {"docs":
[{"location":"functions.html#Fourier-transform-of-basis-elements","page":"Functions","title":"Fourier transform of basis elements","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.Wintegrand\nLinearResponse.WBasisFT","category":"page"},{"location":"functions.html#LinearResponse.Wintegrand","page":"Functions","title":"LinearResponse.Wintegrand","text":"Wintegrand(w,a,e,L,Ω1,Ω2,ψ,dψ,d2ψ,basis,params)\n\nIntegrand computation/update for FT of basis elements\n\n\n\n\n\n","category":"function"},{"location":"functions.html#LinearResponse.WBasisFT","page":"Functions","title":"LinearResponse.WBasisFT","text":"WBasisFT(a,e,Ω1,Ω2,n1,n2,)\n\nFourier Transform of basis elements using RK4 scheme result stored in place\n\n\n\n\n\nwith basisFT struct\n\n\n\n\n\nwithout Ω1, Ω2\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Integral-over-the-resonance-line","page":"Functions","title":"Integral over the resonance line","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.MakeGu","category":"page"},{"location":"functions.html#LinearResponse.MakeGu","page":"Functions","title":"LinearResponse.MakeGu","text":"MakeGu(ndFdJ,n1,n2,Wdata,tabu[,params])\n\nfunction to compute G(u)\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Decomposition","page":"Functions","title":"Decomposition","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.RunAXi","category":"page"},{"location":"functions.html#LinearResponse.RunAXi","page":"Functions","title":"LinearResponse.RunAXi","text":"RunAXi(FHT,params)\n\nfunction to make the decomposition coefficients \"a\" of the response matrix M\n\nthese values do not depend on the frequency being evaluated: which makes them good to table\n\nis this struggling from having to pass around a gigantic array? what if we did more splitting?\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Response-matrix-computations","page":"Functions","title":"Response matrix computations","text":"","category":"section"},{"location":"functions.html","page":"Functions","title":"Functions","text":"LinearResponse.tabM!","category":"page"},{"location":"functions.html#LinearResponse.tabM!","page":"Functions","title":"LinearResponse.tabM!","text":"tabM!(ω,tabM,tabaMcoef,tabωminωmax,FHT,params)\n\ncomputes the response matrix M(ω) for a given COMPLEX frequency ω in physical units, i.e. not (yet) rescaled by 1/Ω0.\n\n@IMPROVE: The shape of the array could maybe be improved\n\nSee LinearTheory.jl for a similar version\n\n\n\n\n\n","category":"function"},{"location":"quickstart.html#Quickstart","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"To reproduce the Plummer radial orbit instability calculation, see the example script in examples/PlummerE/runExamplePlummer.jl. Download the file by running:","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"wget ttps://github.com/JuliaStellarDynamics/LinearResponse.jl/blob/main/examples/PlummerE/runExamplePlummer.jl","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"This script will compute the location of the unstable radial orbit instability mode, using a simplified version of the calculation from Petersen et al. (2024) (n1max=1 instead of n1max=10, which results in a factor of 10 speedup). The outputs will all be cached (appearing as several files with the .h5 extension in the folder where the script is run), so re-running the example is inexpensive. This script will take approximately one minute to run.","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"Run the first example code with the following command:","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"$ julia path/to/runExamplePlummer.jl","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"This example will first install some required libraries (Plots). These installations might take a few minutes when first called.","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"The resulting plot will be created with the name ROIdeterminant.png.","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"(Image: `Plummer ROI demonstration`)","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"In this image and test, we are highlighting two key results:","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"Measurement of an unstable mode, which is the pole located at omega=00+0043i. This mode location is verified against N-body simulations in Petersen et al. (2024).\nFalse poles in the lower half-plane. All poles in the lower half-plane for this model are false poles owing to approximation of the function for linear response. We include them in this example as a caution against interpreting poles without validating via convergence tests.","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"An extension of this script, where the growth rate is computed for a range of radial anisotropy parameters, is Figure 1 in Petersen et al. (2024).","category":"page"},{"location":"quickstart.html#Other-examples","page":"Quickstart","title":"Other examples","text":"","category":"section"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"The examples directory also includes several other basic calculations for the Isochrone, Plummer, and Zang disc models. For example, to (very nearly) reproduce the Isochrone damped dipole mode calculation from Fouvry & Prunet (2022), see the example driver script in examples/IsochroneE/runlinearresponseIsochroneISO.jl. Note that this mode is not converged: adjusting parameters (in particular n1max) will result in different pole locations. The example examples/IsochroneA/runlinearresponseIsochroneISO.jl is precisely the calculation performed by Fouvry & Prunet (2022) – that is, with the analytic isochrone relations. This example will take substantially more computational effort, and can take up to twenty minutes to complete.","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"","category":"page"},{"location":"quickstart.html#Interactive-notebook","page":"Quickstart","title":"Interactive notebook","text":"","category":"section"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"If you prefer interactive Jupyter notebooks, you will need to install IJulia following these instructions.","category":"page"},{"location":"quickstart.html","page":"Quickstart","title":"Quickstart","text":"The interactive introduction example is then given in examples/PlummerE/runExamplePlummer.ipynb.","category":"page"},{"location":"installation.html#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation.html","page":"Installation","title":"Installation","text":"To fully use LinearResponse.jl, you will need OrbitalElements.jl, FiniteHilbertTransform.jl, and AstroBasis.jl. This installation assumes that you have not installed any of the four libraries; if you have already installed any of the others (globally, not locally) you may skip that portion of the installation.","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"The libraries under the JuliaStellarDynamics organisation are currently unregistered. To add them to your julia registry, follow these steps:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"You may add all the packages at once with this command:","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"    julia -e 'using Pkg; Pkg.add(url=\"https://github.com/JuliaStellarDynamics/OrbitalElements.jl.git\"); Pkg.add(url=\"https://github.com/JuliaStellarDynamics/AstroBasis.jl.git\"); Pkg.add(url=\"https://github.com/JuliaStellarDynamics/FiniteHilbertTransform.jl.git\"); Pkg.add(url=\"https://github.com/JuliaStellarDynamics/LinearResponse.jl.git\")'\n    ```\n\nYou can confirm the current version with `status LinearResponse` in the julia package manager.\n\nIf you are new to `julia`, install by following the instructions at [julialang.org/downloads/](https://julialang.org/downloads/). To invoke Julia in the Terminal, you need to make sure that the `julia` command-line program is in your `PATH`. \nSee [here](https://julialang.org/downloads/platform/#optional_add_julia_to_path) for detailed instructions.\n\n**A note on working with environments.** By default packages are added to the default environment at ~/.julia/environments/v1.#. It is however easy to create other, independent, projects. If you want to install the `LinearResponse` package in a different/test environment, first create a folder to host the environment files (Project.toml and Manifest.toml which will be created later on). Then, for every command line invoking Julia, use `julia --project=/path/to/my_env` instead of `julia` alone. Note that packages will always be cloned in ~/.julia/packages but only accessible in your project's context.\n\nYou may also uninstall the libraries by removing the packages, by running","category":"page"},{"location":"installation.html","page":"Installation","title":"Installation","text":"julia -e 'using Pkg; Pkg.rm(\"OrbitalElements\"); Pkg.rm(\"AstroBasis\");Pkg.rm(\"FiniteHilbertTransform\");Pkg.rm(\"LinearResponse\");' ```","category":"page"},{"location":"index.html#LinearResponse.jl","page":"Home","title":"LinearResponse.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Linear response of self-gravitating systems in Julia","category":"page"},{"location":"io.html#I/O","page":"IO","title":"I/O","text":"","category":"section"}]
}
